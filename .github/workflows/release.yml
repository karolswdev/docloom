name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Semantic versioning tags

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for changelog
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Run tests
        run: go test -v -race ./...
      
      - name: Run linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --config=.golangci.yml

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for changelog
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          install-only: true
      
      - name: Run GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goreleaser release --clean
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: dist/
          retention-days: 7

  docker-multi-arch:
    name: Build Multi-Architecture Docker Images
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract version info
        id: version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.VERSION }}
            GIT_COMMIT=${{ steps.version.outputs.GIT_COMMIT }}
            BUILD_DATE=${{ steps.version.outputs.BUILD_DATE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  verify-release:
    name: Verify Release
    needs: [release, docker-multi-arch]
    runs-on: ubuntu-latest
    steps:
      - name: Verify Docker image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --version
      
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: ./dist
      
      - name: Verify checksums
        run: |
          cd dist
          sha256sum -c checksums.txt
      
      - name: Test binary execution
        run: |
          # Find and test Linux binary
          tar -xzf dist/*linux_x86_64.tar.gz
          ./docloom --version

  create-test-release:
    name: Create Test Release (Manual Testing)
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-test')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Create test binaries
        run: |
          # Build test binaries for manual verification
          mkdir -p test-release
          
          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build \
            -ldflags "-X github.com/karolswdev/docloom/internal/version.Version=${{ github.ref_name }} \
                      -X github.com/karolswdev/docloom/internal/version.GitCommit=$(git rev-parse --short HEAD) \
                      -X github.com/karolswdev/docloom/internal/version.BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            -o test-release/docloom-linux-amd64 \
            ./cmd/docloom
          
          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build \
            -ldflags "-X github.com/karolswdev/docloom/internal/version.Version=${{ github.ref_name }} \
                      -X github.com/karolswdev/docloom/internal/version.GitCommit=$(git rev-parse --short HEAD) \
                      -X github.com/karolswdev/docloom/internal/version.BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            -o test-release/docloom-darwin-amd64 \
            ./cmd/docloom
          
          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build \
            -ldflags "-X github.com/karolswdev/docloom/internal/version.Version=${{ github.ref_name }} \
                      -X github.com/karolswdev/docloom/internal/version.GitCommit=$(git rev-parse --short HEAD) \
                      -X github.com/karolswdev/docloom/internal/version.BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            -o test-release/docloom-windows-amd64.exe \
            ./cmd/docloom
          
          # Create checksums
          cd test-release
          sha256sum * > checksums.txt
      
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-release-${{ github.ref_name }}
          path: test-release/
          retention-days: 1